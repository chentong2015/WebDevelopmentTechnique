1、尽可能减少HTTP请求：图片合并 （css sprites），Js脚本文件合并、css文件合并。
2、减少DNS查询
3、将css放在页面最上面，将js放在页面最下面
4、压缩js和css
  减少文件体积，去除不必要的空白符、格式符、注释（即对代码进行格式化）

5、把js和css提取出来放在外部文件中
  这一条要灵活运用，把js和css提取出来放在外部文件的优点是：减少html体积，提高了js和css的复用性，提高日后的可维护性
  缺点：增加了http请求，不过这一点可以通过缓存来解决。
  什么情况下将js和css写在页面内呢，可以分为几种情况：js和css代码比较少；这个页面不怎么会访问

6、避免重定向
  重定向就是用户请求的页面被转移到了别的地方，浏览器向服务请请求一个页面，服务器告诉浏览器请求的页面已经被转移到另外一个页面，并告知另一个页面地址，
  浏览器就再发送请求到重定向的地址。这样会增加服务器和浏览器之间的往返次数，影响网站性能。
  重定向状态码有：301永久重定向 302临时重定向。304 not modified 并不是真的重定向，它是用来告诉浏览器get请求的文件在缓存中，避免重新下载。

7、移除重复脚本
9、使用ajax缓存
  ajax的get和post方法：
  只要是浏览器的get请求，浏览器都会使用缓存，对于同一地址的请求，服务器会发送304状态码到浏览器，浏览器就会使用缓存中的数据
  post的请求每次都会被执行，浏览器不会缓存

10、使用Gzip压缩
11、使用CDN(内容分发网络)