https://developer.mozilla.org/zh-CN/docs/Web

Icons的选择:
Bootstrap Icons & fontawesome Icons

WebGL: 3D渲染
https://developer.mozilla.org/zh-CN/docs/Web/API/WebGL_API/Tutorial
渲染到纹理: https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-render-to-texture.html

Webpack: 模块打包器
https://webpack.js.org/concepts/
Webpack is a static module bundler for modern JavaScript applications.
When webpack processes your application, it internally builds a dependency graph
which maps every module your project needs and generates one or more bundles

TODO. WEB开发最佳实践(规则)
1. 尽可能减少HTTP请求：
   图片合并(css sprites)，Js脚本文件合并、css文件合并

2. 减少DNS查询, 使用Gzip压缩, 使用CDN(内容分发网络获取视频等大文件)

3. 将css放在页面最上面，将js放在页面最下面

4. 压缩js和css
   减少文件体积，去除不必要的空白符、格式符、注释（即对代码进行格式化）

5. 把js和css提取出来放在外部文件中
   优点：减少html体积，提高了js和css的复用性，提高日后的可维护性
   缺点：增加了http请求，不过这一点可以通过缓存来解决。
   什么情况下将js和css写在页面内: js和css代码比较少, 这个页面不怎么会访问

6、避免重定向
   重定向就是用户请求的页面被转移到了别的地方，浏览器向服务请请求一个页面，
   服务器告诉浏览器请求的页面已经被转移到另外一个页面，并告知另一个页面地址，浏览器就再发送请求到重定向的地址。
   这样会增加服务器和浏览器之间的往返次数，影响网站性能。
   重定向状态码有：
   301永久重定向
   302临时重定向
   304 not modified 并不是真的重定向，用来告诉浏览器get请求的文件在缓存中，避免重新下载

7、使用缓存
   只要是浏览器的get请求，浏览器都会使用缓存，对于同一地址的请求，
   服务器会发送304状态码到浏览器，浏览器就会使用缓存中的数据
   post的请求每次都会被执行，浏览器不会缓存